# snippet test "ava test(...)" b
# test('${1:name}', ${2:t} => {
#   ${0}
# });
# endsnippet

# snippet des "ava describe(...)" b
# describe('${1:name}', ${2:it} => {
#   ${0}
# });
# endsnippet

# snippet it "ava it(...)" b
# it('${1:name}', ${2:t} => {
#   ${0}
# });
# endsnippet

# snippet tt "ava t.true(...)" b
# ${1:t}.true(${2:true});
# endsnippet

# snippet tf "ava t.false(...)" b
# ${1:t}.false(${2:false});
# endsnippet

# snippet tis "ava t.is(...)" b
# ${1:t}.is(${2:value}, ${3:expected});
# endsnippet

# snippet tdp "ava t.deepEqual(...)" b
# ${1:t}.deepEqual(${2:value}, ${3:expected});
# endsnippet

# snippet tnot "ava t.not(...)" b
# ${1:t}.not(${2:value}, ${3:expected});
# endsnippet

# snippet tthr "ava t.throws(...)" b
# t.throws(${1:_} => {
#   $2
# }${3:, error});
# endsnippet

# snippet tnt "ava t.notThrows(...)" b
# t.notThrows(${1:_} => {
#   $2
# }${3:, message});
# endsnippet

# snippet tr "ava t.regex(...)" b
# ${1:t}.regex(${2:value}, /${3:regex}/);
# endsnippet

# snippet tnr "ava t.notRegex(...)" b
# ${1:t}.notRegex(${2:value}, /${3:regex}/);
# endsnippet
