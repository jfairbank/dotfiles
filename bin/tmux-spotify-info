#! /usr/bin/env elixir

defmodule Spotli do
  @moduledoc false

  def run!(command) do
    Task.async(fn ->
      {stdout, 0} = System.cmd("spotli", [command])
      stdout
    end)
  end
end

commands = ["status"]

[status_output] =
  commands
  |> Enum.map(&Spotli.run!/1)
  |> Task.await_many()

case String.split(status_output, "\n") do
  [
    play_status,
    artists,
    _album,
    "Track: " <> track,
    _position | _
  ] ->
    with "Spotify is currently " <> status <- play_status do
      artist =
        case artists do
          "Artists: " <> artists_ -> artists_ |> String.split(",") |> List.first()
          "Artist: " <> artist -> artist
        end

      status =
        case status do
          "playing" -> ""
          "paused" -> " "
        end

      IO.puts("#{status}#{artist} - #{track}")
    end

  ["No active device" | _] ->
    IO.puts("Not playing")
end
