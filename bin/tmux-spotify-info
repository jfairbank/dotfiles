#! /usr/bin/env elixir

defmodule Spotli do
  @moduledoc false

  def run!(command) do
    Task.async(fn ->
      {stdout, 0} = System.cmd("spotli", [command])
      stdout
    end)
  end
end

commands = ["status", "vol"]

[status_output, volume_output] =
  commands
  |> Enum.map(&Spotli.run!/1)
  |> Task.await_many()

[
  play_status,
  artists,
  _album,
  "Track: " <> track,
  _position | _
] = String.split(status_output, "\n")

case play_status do
  "Spotify is currently playing" ->
    artist =
      case artists do
        "Artists: " <> artists_ -> artists_ |> String.split(",") |> List.first()
        "Artist: " <> artist -> artist
      end

    "Current Spotify volume level is " <> volume = String.trim(volume_output)

    IO.puts("🎧 (#{volume}) #{artist} - #{track} | ")

  _ ->
    IO.puts("")
end
